# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ConfigurationModifiedInputRobustness(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, robustness: str=None, on_weights_level: str=None, given_weights: List[float]=None):  # noqa: E501
        """ConfigurationModifiedInputRobustness - a model defined in Swagger

        :param robustness: The robustness of this ConfigurationModifiedInputRobustness.  # noqa: E501
        :type robustness: str
        :param on_weights_level: The on_weights_level of this ConfigurationModifiedInputRobustness.  # noqa: E501
        :type on_weights_level: str
        :param given_weights: The given_weights of this ConfigurationModifiedInputRobustness.  # noqa: E501
        :type given_weights: List[float]
        """
        self.swagger_types = {
            'robustness': str,
            'on_weights_level': str,
            'given_weights': List[float]
        }

        self.attribute_map = {
            'robustness': 'robustness',
            'on_weights_level': 'onWeightsLevel',
            'given_weights': 'givenWeights'
        }
        self._robustness = robustness
        self._on_weights_level = on_weights_level
        self._given_weights = given_weights

    @classmethod
    def from_dict(cls, dikt) -> 'ConfigurationModifiedInputRobustness':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfigurationModifiedInput_robustness of this ConfigurationModifiedInputRobustness.  # noqa: E501
        :rtype: ConfigurationModifiedInputRobustness
        """
        return util.deserialize_model(dikt, cls)

    @property
    def robustness(self) -> str:
        """Gets the robustness of this ConfigurationModifiedInputRobustness.

        A robustness analysis is performed ['yes'] or not ['no'].  # noqa: E501

        :return: The robustness of this ConfigurationModifiedInputRobustness.
        :rtype: str
        """
        return self._robustness

    @robustness.setter
    def robustness(self, robustness: str):
        """Sets the robustness of this ConfigurationModifiedInputRobustness.

        A robustness analysis is performed ['yes'] or not ['no'].  # noqa: E501

        :param robustness: The robustness of this ConfigurationModifiedInputRobustness.
        :type robustness: str
        """
        allowed_values = ["none", "indicators", "weights"]  # noqa: E501
        if robustness not in allowed_values:
            raise ValueError(
                "Invalid value for `robustness` ({0}), must be one of {1}"
                .format(robustness, allowed_values)
            )

        self._robustness = robustness

    @property
    def on_weights_level(self) -> str:
        """Gets the on_weights_level of this ConfigurationModifiedInputRobustness.

        Where uncertainties are introduced.  # noqa: E501

        :return: The on_weights_level of this ConfigurationModifiedInputRobustness.
        :rtype: str
        """
        return self._on_weights_level

    @on_weights_level.setter
    def on_weights_level(self, on_weights_level: str):
        """Sets the on_weights_level of this ConfigurationModifiedInputRobustness.

        Where uncertainties are introduced.  # noqa: E501

        :param on_weights_level: The on_weights_level of this ConfigurationModifiedInputRobustness.
        :type on_weights_level: str
        """
        allowed_values = ["none", "all", "single"]  # noqa: E501
        if on_weights_level not in allowed_values:
            raise ValueError(
                "Invalid value for `on_weights_level` ({0}), must be one of {1}"
                .format(on_weights_level, allowed_values)
            )

        self._on_weights_level = on_weights_level

    @property
    def given_weights(self) -> List[float]:
        """Gets the given_weights of this ConfigurationModifiedInputRobustness.

        Values assigned to the weights associated with the indicators.  # noqa: E501

        :return: The given_weights of this ConfigurationModifiedInputRobustness.
        :rtype: List[float]
        """
        return self._given_weights

    @given_weights.setter
    def given_weights(self, given_weights: List[float]):
        """Sets the given_weights of this ConfigurationModifiedInputRobustness.

        Values assigned to the weights associated with the indicators.  # noqa: E501

        :param given_weights: The given_weights of this ConfigurationModifiedInputRobustness.
        :type given_weights: List[float]
        """

        self._given_weights = given_weights
